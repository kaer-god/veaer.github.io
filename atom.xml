<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Veaer]]></title>
  <subtitle><![CDATA[王小二的栖身之所]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://veaer.com/"/>
  <updated>2015-11-10T11:02:17.000Z</updated>
  <id>http://veaer.com/</id>
  
  <author>
    <name><![CDATA[Veaer]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[安卓性能优化s]]></title>
    <link href="http://veaer.com/2015/11/07/15.11.07android_opt/"/>
    <id>http://veaer.com/2015/11/07/15.11.07android_opt/</id>
    <published>2015-11-06T16:00:00.000Z</published>
    <updated>2015-11-10T11:02:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="为什么我的App那么卡">为什么我的App那么卡</h2><h1 id="使用异步">使用异步</h1><ul>
<li>保持 APP 的高度响应，不要在 UI 线程做耗时操作，多使用异步任务</li>
<li>使用线程时要做好线程控制；使用队列、线程池</li>
<li>谨慎使用糟糕的 AysncTask 、 Timer</li>
<li>警惕异步任务引起的内存泄露</li>
<li>应该异步任务分类，比如 HTTP ，图片下载，文件读写，每一类的异步任务维护一个任务队列，而不是每一个任务都开一个线程（ Volley 表示我一个可以搞定这些全部 <em>(:з」∠)</em>）</li>
<li>这些常用的任务应该做好优先级处理（一般 JSON 数据优先于图片等静态数据的请求）</li>
<li>一般异步任务应该开启一个 SingleAsyncTask ，保证一时只有一个线程在工作</li>
<li>HTTP 和图片下载尽量使用同一套网络请求</li>
<li>使用 MVP 模式规范大型 Activity 类的行为，避免异步任务造成的内存泄露</li>
<li>避免内存泄露</li>
</ul>
<h1 id="了解虚拟机内存回收机制">了解虚拟机内存回收机制</h1><ul>
<li>频繁 GC 也会造成卡顿，避免不必要的内存开销</li>
<li>错误的引用姿♂势造成的内存泄露（啊~要泄了~）</li>
<li>常见的 Activity 泄露（单例、 Application 、后台线程、无限动画、静态引用）</li>
<li>Bitmap 泄露（ HoneyComb 这个问题之前压力好大）</li>
<li>尽量使用 IntentService 代替 Service ，前者会自动 StopItself</li>
<li>排查内存泄露问题的方法（我一直以来都是简单暴力的人肉 dump 检查大法）</li>
<li>使用 LeakCanary 自动检查 Activity 泄露问题</li>
<li>对内存负载要保持敏感（ Sharp ）</li>
</ul>
<h1 id="视图优化">视图优化</h1><ul>
<li>布局优化、减少层次， Include Merge</li>
<li>使用 ViewStub 避免不必要的 LayoutInflate ，使用 GONE 代替重复 LayoutInflate 同一个布局</li>
<li>避免过度绘制，应该减少不必要的布局背景；布局层次太深会造成过度绘制以及 Measure 、 Layout 等方法时间复杂度的指数增长</li>
<li>使用过渡动画，比如给图片的呈现加一个轻量的淡入效果会让视觉上变得流畅许多</li>
<li>避免过度的动画，不要让一个界面同时出现多出动画，比如 List 滚动时 Item 项要停止播放动画或者 GIF</li>
<li>复杂动画使用 SurfaceView 或 TextureView</li>
<li>尽量提供多套分辨率的图片，使用矢量图</li>
</ul>
<h1 id="Adapter_优化">Adapter 优化</h1><ul>
<li>复用 convertView ，用 ViewHolder 代替频繁 findViewById</li>
<li>不要重复 setListener ，要使用 v.getId 来复用 Listener ，不然会创建一堆 Listener 导致频繁 GC</li>
<li>多布局要采用 MutilItemView ，而不是使用一个大布局然后动态控制需要现实的部分</li>
<li>不要在 getView 方法做做耗时的操作</li>
<li>快速滚动列表的时候，可以停止加载列表项的图片，停止列表项的动画，不要在这时候改变列表项的布局</li>
<li>尽量用 RecyclerView （增量 Notify 和 RecycledViewPool 带你飞）</li>
</ul>
<h1 id="代码优化">代码优化</h1><ul>
<li>算法优化，减少时间复杂度，参考一些经典的优化算法</li>
<li>尽量使用 int ，而不是 float 或者 double</li>
<li>尽量采用基本类型，避免无必要的自动装箱和拆箱，浪费时间和空间</li>
<li>选用合适的集合类（尽量以空间换时间）、选用 Android 家的 SparseArray,SparseBooleanArray 和 LongSparseArray</li>
<li>避免创建额外的对象（ StringBuilder ）</li>
<li>使用 SO 库完成一些比较独立的功能（高斯模糊）</li>
<li>预处理（提前操作）一些比较耗时的初始化工作统一放到启动图处理</li>
<li>懒加载（延迟处理）规避 Activity 的敏感生命周期</li>
<li>Log 工具类，要在编译时删掉调试代码，而不是在运行时通过判断条件规避</li>
<li>优先使用静态方法、公有方法还是公有方法？速度区别很大哦</li>
<li>类内部直接对成员变量进行操作，不要使用 getter/setter 方法，调用方法耗额外的时间</li>
<li>给内部类访问的外部类成员变量要声明称包内可访问，而不是私有，不然编译的时候还是会自动创建用于访问外部类成员变量的方法</li>
<li>遍历集合时，使用 i++代替 Iterator ，后者需要额外的对象操作，应在循环体内避免这种情况</li>
<li>如果一个基本类型或者 String 的值不会改变，尽量用 final static ，编译时会直接用变量的值替换变量，也就不需要在查询变量的值了</li>
</ul>
<h1 id="其他优化">其他优化</h1><ul>
<li>数据库优化：使用索引、使用异步线程</li>
<li>网络优化 …… 一堆优秀的轮子</li>
<li>避免过度使用依赖注入框架，大量的反射</li>
<li>不过过度设计 /抽象，多态看起来很有设计感，代价就是额外的代码、空间、时间</li>
<li>尽量不要开启多进程，进程的开销很大</li>
</ul>
<h1 id="APK_瘦身">APK 瘦身</h1><ul>
<li>开启混淆</li>
<li>使用 zipalign 工具优化 APK</li>
<li>适当有损图片压缩、使用矢量图</li>
<li>删除项目中冗余的资源，之前写过一些删除没有 res 资源的脚本</li>
<li>动态加载模块化，项目拆分啊！</li>
</ul>
<h1 id="性能问题的排查方法">性能问题的排查方法</h1><ul>
<li>GPU 条形图，没事开来看看淘宝</li>
<li>过度绘制颜色，嗯，不要一篇姨妈红就好</li>
<li>LeakCanary ，自动检测 Activity 泄露，挺好用的</li>
<li>TraceView （ Device Monitor ）， Systrace ，分析哪些代码占用的 CPU 时间太大，屡试不爽</li>
<li>Lint ，检查不合理的 res 资源</li>
<li>layoutopt （还是 optlayout ？），对当前布局提出优化建议，已被 lint 替代，但是还能用</li>
<li>HierarchyViewer ，查看手机当前界面的布局层次，布局优化时常用（只用于模拟器，真机上用要 ROOT ，不想 ROOT 加得使用 ViewServer ）</li>
<li>StrictMode ， UI 操作、网络操作等容易出现性能问题的地方，如果出现异常情况 StrictMode 会报警</li>
</ul>
<p>明天去参加北京GDG了，过的开心:)</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="为什么我的App那么卡">为什么我的App那么卡</h2><h1 id="使用异步">使用异步</h1><ul>
<li>保持 APP 的高度响应，不要在 UI 线程做耗时操作，多使用异步任务</li>
<li>使用线程时要做好线程控制；使用队列、线程池</li>]]>
    </summary>
    
      <category term="性能优化" scheme="http://veaer.com/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
      <category term="Android" scheme="http://veaer.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第一个开源库Glass]]></title>
    <link href="http://veaer.com/2015/11/06/15.11.06glass/"/>
    <id>http://veaer.com/2015/11/06/15.11.06glass/</id>
    <published>2015-11-05T16:00:00.000Z</published>
    <updated>2015-11-06T10:44:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="在安卓4-4之后，开始有了『沉浸式状态栏』这个说法">在安卓4.4之后，开始有了『沉浸式状态栏』这个说法</h2><p>上次在<a href="http://cheduzi.wang/2015/10/15/15.10.15trans_head/" target="_blank" rel="external">关于沉浸式状态栏</a>这篇文章中讲了一下我在适配4.4-5.0之间版本的APP的状态栏的方法，这段时间，我整理了一下，把这个小方法抽成了一个库，发布到了 maven。</p>
<p>不知道什么叫做”沉浸式状态栏”、”translucent status bar”、”translucent system bar”</p>
<p>在5.0以下解放状态栏的App其实并不多，例如ES文件管理器、豌豆荚、最美应用</p>
<p><img src="/assets/post/151106/head.jpg" width="500" height="300"></p>
<p>这三个就是完全的典型了，可以看到ES状态栏还是会有一道半透明的灰条，而豌豆荚在上滑的时候会发生奇怪的事情，我觉得最美反倒是避开了这个事情。。。</p>
<p>然后动手写了个实现4.4到5.0之间的版本解放状态栏的东西(黑科技)，当然并没有什么了不得的东西。。。如果大家有更好的解决方法，希望多多交流，欢迎大家多多issues和pr</p>
<p>也可以用来实现”快速换肤”的效果</p>
<p>机型：IUNI U3,安卓版本4.4.4</p>
<p><img src="/assets/post/151106/iuni.gif" width="200" height="350"></p>
<p>机型：Nexus5,安卓版本5.1.1</p>
<p><img src="/assets/post/151106/n5.gif" width="200" height="350"></p>
<p>使用方法：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">适应<span class="number">5</span>.<span class="number">0</span>以下</span><br><span class="line"><span class="label">mGlass</span> = Glass.<span class="keyword">Builder.newInstance()</span><br><span class="line"></span>                .statusBarWithLower(getWindow(), App.mContext, ContextCompat.getColor(App.mContext, R.color.colorPrimary))</span><br><span class="line">                <span class="preprocessor">.text</span>(textView)</span><br><span class="line">                .<span class="keyword">background(appBar)</span><br><span class="line"></span>                .<span class="keyword">background(fab)</span><br><span class="line"></span>                .<span class="keyword">background(colorView)</span><br><span class="line"></span>                .<span class="keyword">build();</span><br><span class="line"></span></span><br><span class="line">不适应<span class="number">5</span>.<span class="number">0</span>以下</span><br><span class="line"><span class="label">mGlass</span> = Glass.<span class="keyword">Builder.newInstance()</span><br><span class="line"></span>                .statusBar(getWindow(), ContextCompat.getColor(App.mContext, R.color.colorPrimary))</span><br><span class="line">                <span class="preprocessor">.text</span>(textView)</span><br><span class="line">                .<span class="keyword">background(appBar)</span><br><span class="line"></span>                .<span class="keyword">background(fab)</span><br><span class="line"></span>                .<span class="keyword">background(colorView)</span><br><span class="line"></span>                .<span class="keyword">build();</span></span><br></pre></td></tr></table></figure>
<p>使用方法(虽然还有坑，但是先发上来吧)：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'king.veaer:glass:1.0.1'</span></span><br></pre></td></tr></table></figure>
<p>2015.11.5更新</p>
<p>新加入palette支持,那些视图顶部就是图片的少年</p>
<p><img src="/assets/post/151106/palette.gif" width="200" height="350"></p>
<p>git地址：<a href="https://github.com/Veaer/Glass" target="_blank" rel="external">点我</a></p>
<p>demo地址： <a href="http://fir.im/vGlass" target="_blank" rel="external">点我</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="在安卓4-4之后，开始有了『沉浸式状态栏』这个说法">在安卓4.4之后，开始有了『沉浸式状态栏』这个说法</h2><p>上次在<a href="http://cheduzi.wang/2015/10/15/15.10.15trans_head/" target="]]>
    </summary>
    
      <category term="开源" scheme="http://veaer.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="沉浸式状态栏" scheme="http://veaer.com/tags/%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%8A%B6%E6%80%81%E6%A0%8F/"/>
    
      <category term="Android" scheme="http://veaer.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第一个开源项目Gank]]></title>
    <link href="http://veaer.com/2015/11/01/15.11.01gank/"/>
    <id>http://veaer.com/2015/11/01/15.11.01gank/</id>
    <published>2015-10-31T16:00:00.000Z</published>
    <updated>2015-11-06T10:37:49.000Z</updated>
    <content type="html"><![CDATA[<h2 id="造福万民的代(肥)码(皂)家又做了件好事">造福万民的代(肥)码(皂)家又做了件好事</h2><p><a href="http://gank.io/" target="_blank" rel="external">干货集中营</a>每日分享妹子图 和 技术干货，还有供大家中午休息的休闲视频。</p>
<p>没啥，就是看技(mei)术(zi)的</p>
<p>截图附上</p>
<p><img src="/assets/post/151101/gank.jpg" width="500" height="300"></p>
<ul>
<li>“appcompat-v7”     : “com.android.support:appcompat-v7:22.2.1”</li>
<li>“design”           : “com.android.support:design:22.2.1”</li>
<li>“recyclerview-v7”  : “com.android.support:recyclerview-v7:22.2.1”</li>
<li>“okhttp”           : “com.squareup.okhttp:okhttp:2.3.0”</li>
<li>“retrofit”         : “com.squareup.retrofit:retrofit:1.9.0”</li>
<li>“rxandroid”        : “io.reactivex:rxandroid:1.0.1”</li>
<li>“butterknife”      : “com.jakewharton:butterknife:7.0.1”</li>
<li>“umeng-analytics”  : “com.umeng.analytics:analytics:latest.integration”</li>
<li>“glide”            : “com.github.bumptech.glide:glide:3.6.1”</li>
<li>“picasso”          : “com.squareup.picasso:picasso:2.5.2”</li>
<li>“photoview”        : “com.github.chrisbanes.photoview:library:1.2.3”</li>
</ul>
<p>git地址：<a href="https://github.com/Veaer/Gank-Veaer" target="_blank" rel="external">点我</a></p>
<p>apK下载：<a href="https://fir.im/gankapp" target="_blank" rel="external">点我</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="造福万民的代(肥)码(皂)家又做了件好事">造福万民的代(肥)码(皂)家又做了件好事</h2><p><a href="http://gank.io/" target="_blank" rel="external">干货集中营</a>每日分享妹子图 和 技术干货，还]]>
    </summary>
    
      <category term="Gank" scheme="http://veaer.com/tags/Gank/"/>
    
      <category term="开源" scheme="http://veaer.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="Android" scheme="http://veaer.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015年 秋]]></title>
    <link href="http://veaer.com/2015/10/16/15.10.20birthday/"/>
    <id>http://veaer.com/2015/10/16/15.10.20birthday/</id>
    <published>2015-10-15T16:00:00.000Z</published>
    <updated>2015-10-27T12:33:27.000Z</updated>
    <content type="html"><![CDATA[<embed src="http://www.xiami.com/widget/0_1774946504/singlePlayer.swf" type="application/x-shockwave-flash" width="257" height="33" wmode="transparent">]]></content>
    <summary type="html">
    <![CDATA[<embed src="http://www.xiami.com/widget/0_1774946504/singlePlayer.swf" type="application/x-shockwave-flash" width="257" height="33" wmode="t]]>
    </summary>
    
      <category term="生日" scheme="http://veaer.com/tags/%E7%94%9F%E6%97%A5/"/>
    
      <category term="杂记" scheme="http://veaer.com/categories/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ListView实时预览以及图文控件]]></title>
    <link href="http://veaer.com/2015/10/16/15.10.16android_tools/"/>
    <id>http://veaer.com/2015/10/16/15.10.16android_tools/</id>
    <published>2015-10-15T16:00:00.000Z</published>
    <updated>2015-10-27T12:33:45.000Z</updated>
    <content type="html"><![CDATA[<h2 id="ListView">ListView</h2><p>之前写ListView的时候，是在整体布局文件中加入listVew控件，然后去另一个布局文件中写单个item的布局，脑补listview会长成的样子，在AS的预览框中你看到的可能是</p>
<p><img src="http://77fkpo.com5.z0.glb.clouddn.com/6c621612138ca4255844c8bb3520f3f0.png" width="250" height="400"></p>
<p>然而只能将应用跑起来才能看到你想要的效果，这时候如果引入一个命名空间<code>xmlns:tools=&quot;http://schemas.android.com/tools&quot;</code>，然后稍微修改一下你的listview代码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">ListView</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">tools:listheader</span>=<span class="value">"@layout/demo_header"</span></span><br><span class="line">    <span class="attribute">tools:listitem</span>=<span class="value">"@layout/demo_item"</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后你就会看到你预览框美美的样子了</p>
<p><img src="http://77fkpo.com5.z0.glb.clouddn.com/09a77e10989db0cdc69cd7c86da8b0e6.png" width="250" height="400"></p>
<blockquote>
<p><code>xmlns:tools=&quot;http://schemas.android.com/tools&quot;</code>是一个很重要也是很好用的命名空间，它拥有android：中所有的属性，但它标识的属性仅仅在预览中有效，不会影响真正的运行结果</p>
</blockquote>
<h2 id="图文控件">图文控件</h2><p><img src="http://77fkpo.com5.z0.glb.clouddn.com/f85df15638a58a5786887edf0c18bccf.png" width="496" height="160"></p>
<p>如果你想实现上面这个布局，很多人第一反应是写一个横向线性布局或者，然后里面包含一个TextView以及一个ImageView，在UI编写的时候，我们应该hold住布局的纵深，所以有一个奇技淫巧可以简单的实现这个效果</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"60dp"</span></span><br><span class="line">    <span class="attribute">android:padding</span>=<span class="value">"16dp"</span></span><br><span class="line">    <span class="attribute">android:textAppearance</span>=<span class="value">"?android:attr/textAppearanceListItemSmall"</span></span><br><span class="line">    <span class="attribute">android:gravity</span>=<span class="value">"center_vertical"</span></span><br><span class="line">    <span class="attribute">android:drawableRight</span>=<span class="value">"@drawable/icon_arrow"</span></span><br><span class="line">    <span class="attribute">android:drawablePadding</span>=<span class="value">"10dp"</span></span><br><span class="line">    <span class="attribute">android:text</span>=<span class="value">"设置菜单"</span></span><br><span class="line">    <span class="attribute">android:textSize</span>=<span class="value">"20sp"</span></span><br><span class="line">    /&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>drawableRight</code>来设置图标，<code>drawablePadding</code>来设置图标和文字的距离，解放布局深度。</p>
<h2 id="Everything_can_be_simple-">Everything can be simple.</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="ListView">ListView</h2><p>之前写ListView的时候，是在整体布局文件中加入listVew控件，然后去另一个布局文件中写单个item的布局，脑补listview会长成的样子，在AS的预览框中你看到的可能是</p>
<p><img src]]>
    </summary>
    
      <category term="tools" scheme="http://veaer.com/tags/tools/"/>
    
      <category term="Android" scheme="http://veaer.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于沉浸式状态栏]]></title>
    <link href="http://veaer.com/2015/10/15/15.10.15trans_head/"/>
    <id>http://veaer.com/2015/10/15/15.10.15trans_head/</id>
    <published>2015-10-14T16:00:00.000Z</published>
    <updated>2015-11-06T10:44:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="在安卓4-4之后，开始有了『沉浸式状态栏』这个说法">在安卓4.4之后，开始有了『沉浸式状态栏』这个说法</h2><p>但是我觉得它实现的效果更像是单纯的全屏模式更像一些</p>
<p>这里有篇文章<a href="http://blog.csdn.net/sdvch/article/details/44209959" target="_blank" rel="external">使用全屏沉浸模式（Using Immersive Full-Screen Mode）</a>来讲述利用setSystemUiVisibility()方法，实现『沉浸』的过程，我觉得这种『沉浸式』可以用来开发视频播放的Acivity，它和<code>android:theme=&quot;@android:style/Theme.NoTitleBar.Fullscreen&quot;</code>的区别好像就在于前者的触摸操作会退出全屏</p>
<p><img src="http://77fkpo.com5.z0.glb.clouddn.com/e051c31ac90cfc41c60c81fb11020e83.png" width="400" height="200"></p>
<h2 id="在安卓5-0之后，可以通过设置主题来完成『沉浸式』的效果">在安卓5.0之后，可以通过设置主题来完成『沉浸式』的效果</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;  </span><br><span class="line">  &lt;!<span class="comment">-- inherit from the material theme --&gt;  </span></span><br><span class="line">  &lt;style <span class="property">name</span>=<span class="string">"AppTheme"</span> parent=<span class="string">"android:Theme.Material"</span>&gt;  </span><br><span class="line">    &lt;!<span class="comment">-- Main theme colors --&gt;  </span></span><br><span class="line">    &lt;!<span class="comment">--   your app's branding color (for the app bar) --&gt;  </span></span><br><span class="line">    &lt;<span class="property">item</span> <span class="property">name</span>=<span class="string">"android:colorPrimary"</span>&gt;@color/primary&lt;/<span class="property">item</span>&gt;  </span><br><span class="line">    &lt;!<span class="comment">--   darker variant of colorPrimary (for status bar, contextual app bars) --&gt;  </span></span><br><span class="line">    &lt;<span class="property">item</span> <span class="property">name</span>=<span class="string">"android:colorPrimaryDark"</span>&gt;@color/primary_dark&lt;/<span class="property">item</span>&gt;  </span><br><span class="line">    &lt;!<span class="comment">--   theme UI controls like checkboxes and text fields --&gt;  </span></span><br><span class="line">    &lt;<span class="property">item</span> <span class="property">name</span>=<span class="string">"android:colorAccent"</span>&gt;@color/accent&lt;/<span class="property">item</span>&gt;  </span><br><span class="line">  &lt;/style&gt;  </span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure>
<p>关于那几个参数，可以用一张图来标识</p>
<p><img src="http://images.cnitblog.com/blog/651487/201411/071629282842265.png" width="180" height="320"></p>
<p>还有<code>&lt;item name=&quot;android:colorAccent&quot;&gt;#00FF00&lt;/item&gt;</code>用来设置一些奇奇怪怪的地方的颜色。。。例如checkbox神马的。。。</p>
<p><img src="http://images.cnitblog.com/blog/651487/201411/071655233623279.jpg" width="357" height="131"></p>
<p>然而这样像是定义了一个『主旋律』，类似知乎这种主题为蓝色的App,每个页面的顶部状态栏都设置为蓝色，也不会有违和感，可是假如你的几个页面的主题色差的有点大(就像红配绿)，就会不是那么好看了，毕竟做沉浸式的初衷就是为了让App好看一点</p>
<h2 id="我的黑科技">我的黑科技</h2><p>在BaseActivity的onCreate()方法中使用</p>
<figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="component">if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</span><br><span class="line">    getWindow()<span class="string">.setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS</span>,WindowManager<span class="string">.LayoutParams.FLAG_TRANSLUCENT_STATUS)</span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<p>这样你的App在4.4.4以上就可以从顶部开始布局了，你可以在rootView 上设置padding为状态栏的高度,就可以实现『沉浸式』的效果，但是在4.4.4以下就把padding去掉</p>
<p>得到状态栏高度的方法</p>
<ul>
<li>第一种</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getStatusBarHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> statusBarHeight = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class&lt;?&gt; c = Class.forName(<span class="string">"com.android.internal.R$dimen"</span>);</span><br><span class="line">            Object o = c.newInstance();</span><br><span class="line">            Field field = c.getField(<span class="string">"status_bar_height"</span>);</span><br><span class="line">            <span class="keyword">int</span> x = (Integer) field.get(o);</span><br><span class="line">            statusBarHeight = getResources().getDimensionPixelSize(x);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            Rect frame = <span class="keyword">new</span> Rect();</span><br><span class="line">            getWindow().getDecorView().getWindowVisibleDisplayFrame(frame);</span><br><span class="line">            statusBarHeight = frame.top;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> statusBarHeight;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>第二种</li>
</ul>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private <span class="type">int</span> getStatusBarHeight() &#123;</span><br><span class="line">            <span class="type">int</span> <span class="literal">result</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> resourceId = getResources().getIdentifier(<span class="string">"status_bar_height"</span>, <span class="string">"dimen"</span>, <span class="string">"android"</span>);</span><br><span class="line">            <span class="keyword">if</span> (resourceId &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="literal">result</span> = res.getDimensionPixelSize(resourceId);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">result</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>不过，信我的，25dp。</p>
<p>还有在版本19以下和以上区别高度，我是这么做的</p>
<p>values 文件夹下的 dimens.xml 中定义 padding 为0，values-v19文件夹下单 dimens.xml 中定义为25dp，世界清净了。</p>
<h2 id="Everything_can_be_simple-">Everything can be simple.</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="在安卓4-4之后，开始有了『沉浸式状态栏』这个说法">在安卓4.4之后，开始有了『沉浸式状态栏』这个说法</h2><p>但是我觉得它实现的效果更像是单纯的全屏模式更像一些</p>
<p>这里有篇文章<a href="http://blog.csdn.net/sdv]]>
    </summary>
    
      <category term="沉浸式状态栏" scheme="http://veaer.com/tags/%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%8A%B6%E6%80%81%E6%A0%8F/"/>
    
      <category term="Android" scheme="http://veaer.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[一个开源项目float_text]]></title>
    <link href="http://veaer.com/2015/10/13/15.10.13float_text/"/>
    <id>http://veaer.com/2015/10/13/15.10.13float_text/</id>
    <published>2015-10-12T16:00:00.000Z</published>
    <updated>2015-10-27T12:34:12.000Z</updated>
    <content type="html"><![CDATA[<p>在注册、登录以及一些表单填写的时候，会下意识地做一些动态效果上去，就像：</p>
<p><img src="http://77fkpo.com5.z0.glb.clouddn.com/46aed824f870cb3b8747a7c6d2d0bd85.jpg" width="400" height="300"></p>
<p>在谷歌还没发布design包之前，在github上有一个类似的开源库<a href="https://github.com/wrapp/floatlabelededittext" target="_blank" rel="external">floatlabelededittext</a></p>
<p>当然，design包为我们解决了这个实现</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;android<span class="class">.support</span><span class="class">.design</span><span class="class">.widget</span><span class="class">.TextInputLayout</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span>&gt;</span><br><span class="line">        &lt;EditText</span><br><span class="line">            android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">            android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">            android:hint=<span class="string">"帐号"</span>/&gt;</span><br><span class="line">&lt;/android<span class="class">.support</span><span class="class">.design</span><span class="class">.widget</span><span class="class">.TextInputLayout</span>&gt;</span><br></pre></td></tr></table></figure>
<p>它实现的效果如图：</p>
<p><img src="http://77fkpo.com5.z0.glb.clouddn.com/27aa9fe783967b1c457f76877f859e73.gif" width="360" height="640"></p>
<p>当然，前提是你已经引入了design包</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.android.support:design:22.2.0'</span></span><br></pre></td></tr></table></figure>
<h2 id="Everything_can_be_simple-">Everything can be simple.</h2>]]></content>
    <summary type="html">
    <![CDATA[<p>在注册、登录以及一些表单填写的时候，会下意识地做一些动态效果上去，就像：</p>
<p><img src="http://77fkpo.com5.z0.glb.clouddn.com/46aed824f870cb3b8747a7c6d2d0bd85.jpg" width="]]>
    </summary>
    
      <category term="TextInputLayout" scheme="http://veaer.com/tags/TextInputLayout/"/>
    
      <category term="Android" scheme="http://veaer.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[关于Activity]]></title>
    <link href="http://veaer.com/2015/10/03/15.10.03activity/"/>
    <id>http://veaer.com/2015/10/03/15.10.03activity/</id>
    <published>2015-10-02T16:00:00.000Z</published>
    <updated>2015-11-06T10:39:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Activity的生命周期">Activity的生命周期</h2><p>这个话题太常见了，随便谷歌一下就能看到一大堆答案</p>
<p>st=&gt;start: Activity启动<br>e=&gt;end: Activity销毁<br>create=&gt;operation: onCreate<br>start=&gt;operation: onStart(未显示)<br>resume=&gt;operation: onResume(已经显示)<br>pause=&gt;operation: onPause<br>stop=&gt;operation: onStop<br>destory=&gt;operation: onDestory</p>
<p>st-&gt;create-&gt;start-&gt;resume-&gt;pause-&gt;stop-&gt;destory-&gt;e</p>
<ul>
<li>onCreate():不需要过多解释，这个阶段是activity刚刚建立，一般用来做布局文件的加载，以及数据的初始化<br>Called when the activity is starting.  This is where most initialization</li>
<li>onStart():Activity已经准备好，只是暂时不可见<br>Called when the activity is becoming visible to the user</li>
<li>onResume():Activity即将从不可见变为可见<br>Called when the activity will start interacting with the user</li>
<li>onPause():Activity将要开始停止，有一种极端情况，就是Activity在这这一阶段的时候迅速再切回屏幕，本Activity将再调用 onResume方法，这个阶段可以做一些保存状态的动作，但不能太耗时<br>Called when the system is about to start resuming a previous activity</li>
<li>onStop():Activity即将停止，这个阶段可以做一些保存状态的动作，但不能太耗时<br>Called when the activity is no longer visible to the user, because another activity has been resumed and is covering this one</li>
<li>onDestory():Activity即将被销毁，在这一阶段可以做一些资源回收的操作<br>The final call you receive before your activity is destroyed</li>
</ul>
<p>其实Activity的生命周期远不止这些，还有</p>
<ul>
<li><p>onPostCreate()（Called when activity start-up is complete (after onStart() and onRestoreInstanceState(Bundle) have been called))</p>
</li>
<li><p>onPostResume()（Called when activity resume is complete）等等</p>
</li>
</ul>
<p>真实开发过程中用到的不是很多，当然，每个人的业务需求都不一样，整清楚生命周期才是重要的。：）</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Activity的生命周期">Activity的生命周期</h2><p>这个话题太常见了，随便谷歌一下就能看到一大堆答案</p>
<p>st=&gt;start: Activity启动<br>e=&gt;end: Activity销毁<br>create=&gt;]]>
    </summary>
    
      <category term="生命周期" scheme="http://veaer.com/tags/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
      <category term="Android" scheme="http://veaer.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Markdown介绍]]></title>
    <link href="http://veaer.com/2015/10/01/15.10.01mark_down/"/>
    <id>http://veaer.com/2015/10/01/15.10.01mark_down/</id>
    <published>2015-09-30T16:00:00.000Z</published>
    <updated>2015-10-27T12:34:27.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Markdown_语法和_MWeb_写作使用说明">Markdown 语法和 MWeb 写作使用说明</h1><h2 id="Markdown_的设计哲学">Markdown 的设计哲学</h2><blockquote>
<p>Markdown 的目標是實現「易讀易寫」。<br>不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。<br>Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p>
</blockquote>
<a id="more"></a>
<h2 id="本文约定">本文约定</h2><p>如果有写 <code>效果如下：</code>， 在 MWeb 编辑状态下只有用 <code>CMD + R</code> 预览才可以看效果。</p>
<h2 id="标题">标题</h2><p>Markdown 语法：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># 第一级标题 `<span class="title">&lt;h1&gt;</span>` </span></span><br><span class="line"><span class="preprocessor">## 第二级标题 `<span class="title">&lt;h2&gt;</span>` </span></span><br><span class="line"><span class="preprocessor">###### 第六级标题 `<span class="title">&lt;h6&gt;</span>`</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<h1 id="第一级标题_&lt;h1&gt;">第一级标题 <code>&lt;h1&gt;</code></h1><h2 id="第二级标题_&lt;h2&gt;">第二级标题 <code>&lt;h2&gt;</code></h2><h6 id="第六级标题_&lt;h6&gt;">第六级标题 <code>&lt;h6&gt;</code></h6><h2 id="强调">强调</h2><p>Markdown 语法：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span>这些文字会生成`<span class="variable">&lt;em&gt;</span>`<span class="keyword">*</span></span><br><span class="line">_这些文字会生成`<span class="variable">&lt;u&gt;</span>`_</span><br><span class="line"></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span>这些文字会生成`<span class="variable">&lt;strong&gt;</span>`<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">__这些文字会生成`<span class="variable">&lt;strong&gt;</span>`__</span><br></pre></td></tr></table></figure>
<p>在 MWeb 中的快捷键为： <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br>效果如下：</p>
<p><em>这些文字会生成<code>&lt;em&gt;</code></em><br><em>这些文字会生成<code>&lt;u&gt;</code></em></p>
<p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br><strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p>
<h2 id="换行">换行</h2><p>四个及以上空格加回车。<br>如果不想打这么多空格，只要回车就为换行，请勾选：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code></p>
<h2 id="列表">列表</h2><h3 id="无序列表">无序列表</h3><p>Markdown 语法：</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">*</span> 项目一 无序列表 `<span class="keyword">*</span> + 空格键`</span><br><span class="line"><span class="keyword">*</span> 项目二</span><br><span class="line">	<span class="keyword">*</span> 项目二的子项目一 无序列表 `<span class="keyword">*</span> + TAB + 空格键`</span><br><span class="line">	<span class="keyword">*</span> 项目二的子项目二</span><br></pre></td></tr></table></figure>
<p>在 MWeb 中的快捷键为： <code>Option + U</code><br>效果如下：</p>
<ul>
<li>项目一 无序列表 <code>* + 空格键</code></li>
<li>项目二<ul>
<li>项目二的子项目一 无序列表 <code>* + TAB + 空格键</code></li>
<li>项目二的子项目二</li>
</ul>
</li>
</ul>
<h3 id="有序列表">有序列表</h3><p>Markdown 语法：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 项目一 有序列表 `数字 + . + 空格键`</span><br><span class="line"><span class="number">2.</span> 项目二 </span><br><span class="line"><span class="number">3.</span> 项目三</span><br><span class="line">	<span class="number">1.</span> 项目三的子项目一 有序列表 `数字 + . + TAB + 空格键`</span><br><span class="line">	<span class="number">2.</span> 项目三的子项目二</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<ol>
<li>项目一 有序列表 <code>数字 + . + 空格键</code></li>
<li>项目二 </li>
<li>项目三<ol>
<li>项目三的子项目一 有序列表 <code>数字 + . + TAB + 空格键</code></li>
<li>项目三的子项目二</li>
</ol>
</li>
</ol>
<h3 id="任务列表（Task_lists）">任务列表（Task lists）</h3><p>Markdown 语法：</p>
<figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby"> [ ] 任务一 未做任务 <span class="string">`- + 空格 + [ ]`</span></span><br><span class="line"></span>-<span class="ruby"> [x] 任务二 已做任务 <span class="string">`- + 空格 + [x]`</span></span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<ul>
<li>[ ] 任务一 未做任务 <code>- + 空格 + [ ]</code></li>
<li>[x] 任务二 已做任务 <code>- + 空格 + [x]</code></li>
</ul>
<h2 id="图片">图片</h2><p>Markdown 语法：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![<span class="link_label">GitHub set up</span>](<span class="link_url">http://zh.mweb.im/asset/img/set-up-git.gif</span>)</span><br><span class="line">格式: ![<span class="link_label">Alt Text</span>](<span class="link_url">url</span>)</span><br></pre></td></tr></table></figure>
<p><code>Control + Shift + I</code> 可插入Markdown语法。<br>如果是 MWeb 的文档库中的文档，还可以用拖放图片、<code>CMD + V</code> 粘贴、<code>CMD + Option + I</code> 导入这三种方式来增加图片。<br>效果如下：</p>
<p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up"></p>
<h2 id="链接">链接</h2><p>Markdown 语法：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email <span class="xml"><span class="tag">&lt;<span class="title">example@example.com</span>&gt;</span></span></span><br><span class="line">[<span class="link_label">GitHub</span>](<span class="link_url">http://github.com</span>)</span><br><span class="line">自动生成连接  <span class="xml"><span class="tag">&lt;<span class="title">http:</span>//<span class="attribute">www.github.com</span>/&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><code>Control + Shift + L</code> 可插入Markdown语法。<br>如果是 MWeb 的文档库中的文档，拖放或<code>CMD + Option + I</code> 导入非图片时，会生成连接。<br>效果如下：</p>
<p>Email 连接： <a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#58;&#x65;&#120;&#x61;&#109;&#112;&#108;&#x65;&#x40;&#101;&#x78;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#99;&#x6f;&#x6d;">&#x65;&#120;&#x61;&#109;&#112;&#108;&#x65;&#x40;&#101;&#x78;&#x61;&#109;&#112;&#108;&#101;&#x2e;&#99;&#x6f;&#x6d;</a><br><a href="http://github.com" target="_blank" rel="external">连接标题Github网站</a><br>自动生成连接像： <a href="http://www.github.com/" target="_blank" rel="external">http://www.github.com/</a> 这样</p>
<h2 id="区块引用">区块引用</h2><p>Markdown 语法：</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">某某说:</span><br><span class="line"><span class="blockquote">&gt; 第一行引用</span></span><br><span class="line"><span class="blockquote">&gt; 第二行费用文字</span></span><br></pre></td></tr></table></figure>
<p><code>Control + B</code> 可插入Markdown语法。<br>效果如下：</p>
<p>某某说:</p>
<blockquote>
<p>第一行引用<br>第二行费用文字</p>
</blockquote>
<h2 id="行内代码">行内代码</h2><p>Markdown 语法：</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">像这样即可：<span class="escape">`&lt;</span>addr&gt;<span class="escape">` </span><span class="escape">`c</span>ode`</span><br></pre></td></tr></table></figure>
<p><code>CMD + K</code> 可插入Markdown语法。<br>效果如下：</p>
<p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p>
<h2 id="多行或者一段代码">多行或者一段代码</h2><p>Markdown 语法：</p>
<pre><code><span class="comment"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(arg) &#123;</span><br><span class="line">    $.facebox(&#123;div:<span class="string">'#foo'</span>&#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></span>
</code></pre><p><code>CMD + Shift + K</code> 可插入Markdown语法。<br>效果如下：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fancyAlert</span>(<span class="params">arg</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(arg) &#123;</span><br><span class="line">		$.facebox(&#123;div:<span class="string">'#foo'</span>&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="顺序图或流程图">顺序图或流程图</h2><p>Markdown 语法：</p>
<pre><code><span class="comment"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#24352;&#19977;-&#62;&#26446;&#22235;: &#22079;&#65292;&#23567;&#22235;&#20799;, &#20889;&#21338;&#23458;&#20102;&#27809;?&#10;Note right of &#26446;&#22235;: &#26446;&#22235;&#24867;&#20102;&#19968;&#19979;&#65292;&#35828;&#65306;&#10;&#26446;&#22235;--&#62;&#24352;&#19977;: &#24537;&#24471;&#21520;&#34880;&#65292;&#21738;&#26377;&#26102;&#38388;&#20889;&#12290;</span><br></pre></td></tr></table></figure></span>

<span class="comment"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st=&#62;start: &#24320;&#22987;&#10;e=&#62;end: &#32467;&#26463;&#10;op=&#62;operation: &#25105;&#30340;&#25805;&#20316;&#10;cond=&#62;condition: &#30830;&#35748;&#65311;&#10;&#10;st-&#62;op-&#62;cond&#10;cond(yes)-&#62;e&#10;cond(no)-&#62;op</span><br></pre></td></tr></table></figure></span>
</code></pre><p>效果如下（ <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code> 才会看到效果 ）：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#24352;&#19977;-&#62;&#26446;&#22235;: &#22079;&#65292;&#23567;&#22235;&#20799;, &#20889;&#21338;&#23458;&#20102;&#27809;?&#10;Note right of &#26446;&#22235;: &#26446;&#22235;&#24867;&#20102;&#19968;&#19979;&#65292;&#35828;&#65306;&#10;&#26446;&#22235;--&#62;&#24352;&#19977;: &#24537;&#24471;&#21520;&#34880;&#65292;&#21738;&#26377;&#26102;&#38388;&#20889;&#12290;</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st=&#62;start: &#24320;&#22987;&#10;e=&#62;end: &#32467;&#26463;&#10;op=&#62;operation: &#25105;&#30340;&#25805;&#20316;&#10;cond=&#62;condition: &#30830;&#35748;&#65311;&#10;&#10;st-&#62;op-&#62;cond&#10;cond(yes)-&#62;e&#10;cond(no)-&#62;op</span><br></pre></td></tr></table></figure>
<p>更多请参考：<a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="external">http://adrai.github.io/flowchart.js/</a></p>
<h2 id="表格">表格</h2><p>Markdown 语法：</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一格表头 <span class="string">| 第二格表头</span></span><br><span class="line">--------- <span class="string">| -------------</span></span><br><span class="line">内容单元格 第一列第一格 <span class="string">| 内容单元格第二列第一格</span></span><br><span class="line">内容单元格 第一列第二格 多加文字 <span class="string">| 内容单元格第二列第二格</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<table>
<thead>
<tr>
<th>第一格表头</th>
<th>第二格表头</th>
</tr>
</thead>
<tbody>
<tr>
<td>内容单元格 第一列第一格</td>
<td>内容单元格第二列第一格</td>
</tr>
<tr>
<td>内容单元格 第一列第二格 多加文字</td>
<td>内容单元格第二列第二格</td>
</tr>
</tbody>
</table>
<h2 id="删除线">删除线</h2><p>Markdown 语法：</p>
<pre><code>加删除线像这样用： ~~删除这些~~
</code></pre><p>效果如下：</p>
<p>加删除线像这样用： <del>删除这些</del></p>
<h2 id="分隔线">分隔线</h2><p>以下三种方式都可以生成分隔线：</p>
<pre><code><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>

<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>

- - -
</code></pre><p>效果如下：</p>
<hr>
<hr>
<hr>
<h2 id="MathJax">MathJax</h2><p>Markdown 语法：</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">块级公式：</span><br><span class="line"><span class="formula">$$	x = <span class="command">\dfrac</span><span class="special">&#123;</span>-b <span class="command">\pm</span> <span class="command">\sqrt</span><span class="special">&#123;</span>b^2 - 4ac<span class="special">&#125;</span><span class="special">&#125;</span><span class="special">&#123;</span>2a<span class="special">&#125;</span> $$</span></span><br><span class="line"></span><br><span class="line"><span class="command">\\</span><span class="special">[</span> <span class="command">\frac</span><span class="special">&#123;</span>1<span class="special">&#125;</span><span class="special">&#123;</span><span class="command">\Bigl</span>(<span class="command">\sqrt</span><span class="special">&#123;</span><span class="command">\phi</span> <span class="command">\sqrt</span><span class="special">&#123;</span>5<span class="special">&#125;</span><span class="special">&#125;</span>-<span class="command">\phi</span><span class="command">\Bigr</span>) e^<span class="special">&#123;</span><span class="command">\frac</span>25 <span class="command">\pi</span><span class="special">&#125;</span><span class="special">&#125;</span> =</span><br><span class="line">1+<span class="command">\frac</span><span class="special">&#123;</span>e^<span class="special">&#123;</span>-2<span class="command">\pi</span><span class="special">&#125;</span><span class="special">&#125;</span> <span class="special">&#123;</span>1+<span class="command">\frac</span><span class="special">&#123;</span>e^<span class="special">&#123;</span>-4<span class="command">\pi</span><span class="special">&#125;</span><span class="special">&#125;</span> <span class="special">&#123;</span>1+<span class="command">\frac</span><span class="special">&#123;</span>e^<span class="special">&#123;</span>-6<span class="command">\pi</span><span class="special">&#125;</span><span class="special">&#125;</span></span><br><span class="line"><span class="special">&#123;</span>1+<span class="command">\frac</span><span class="special">&#123;</span>e^<span class="special">&#123;</span>-8<span class="command">\pi</span><span class="special">&#125;</span><span class="special">&#125;</span> <span class="special">&#123;</span>1+<span class="command">\ldots</span><span class="special">&#125;</span> <span class="special">&#125;</span> <span class="special">&#125;</span> <span class="special">&#125;</span> <span class="command">\\</span><span class="special">]</span></span><br><span class="line"></span><br><span class="line">行内公式： <span class="formula">$<span class="command">\Gamma</span>(n) = (n-1)!<span class="command">\quad</span><span class="command">\forall</span> n<span class="command">\in</span><span class="command">\mathbb</span> N$</span></span><br></pre></td></tr></table></figure>
<p>效果如下（<code>Preferences</code> - <code>Themes</code> - <code>Enable MathJax</code> 才会看到效果）：</p>
<p>块级公式：<br>$$    x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$</p>
<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br>1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br>{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>
<p>行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$</p>
<h2 id="脚注（Footnote）">脚注（Footnote）</h2><p>Markdown 语法：</p>
<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个脚注：<span class="string">[^sample_footnote]</span></span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>这是一个脚注：<a href="这里是脚注信息">^sample_footnote</a></p>
<h2 id="注释和阅读更多">注释和阅读更多</h2><!-- comment -->
<!-- more -->
<p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br><strong>注</strong> 阅读更多的功能只用在生成网站或博客时。</p>
<h2 id="TOC">TOC</h2><p>Markdown 语法：</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[TOC]</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>[TOC]</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Markdown_语法和_MWeb_写作使用说明">Markdown 语法和 MWeb 写作使用说明</h1><h2 id="Markdown_的设计哲学">Markdown 的设计哲学</h2><blockquote>
<p>Markdown 的目標是實現「易讀易寫」。<br>不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。<br>Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p>
</blockquote>]]>
    
    </summary>
    
      <category term="语法" scheme="http://veaer.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
      <category term="Markdown" scheme="http://veaer.com/categories/Markdown/"/>
    
  </entry>
  
</feed>
